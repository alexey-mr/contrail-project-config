---

- name: create local registry 
  when: sanity is not defined or sanity.docker is not defined
  block:
    - name: set registry name
      set_fact:
        registry_name: "registry_{{ contrail_packaging.repo_name | replace('-','_') }}_{{ zuul.buildset[0:10] }}"

    - name: start docker registry
      docker_container:
        name: "{{ registry_name }}"
        image: 'registry:2'
        state: started
        published_ports: all
      become: yes

    - name: get registry port
      shell: "docker ps --format '{% raw %}{{ .Ports }}{% endraw %}' --filter 'name={{ registry_name }}' 2>&1 | sed -r 's/.*:([0-9]+)->.*/\\1/'"
      register: registry_port_res
      become: yes

    - name: set registry port
      set_fact:
        registry_port: "{{ registry_port.stdout }}"

    - name: set registry name
      set_fact:
        registry_name: "{{ docker_registry.fqdn }}"

- name: use existing local registry 
  when: sanity is defined and sanity.docker is defined
  block:
    - name: set registry port
      set_fact:
        registry_port: "{{ sanity.docker.port }}"

    - name: set registry name
      set_fact:
        registry_name: "{{ sanity.docker.fqdn | default({{ docker_registry.fqdn }}) }}"

- name: save variable to a file on executor
  copy:
    content: "{{ {\"registry_port\": registry_port } | to_nice_yaml }}"
    dest: "{{ zuul.executor.work_root }}/saved_vars.yaml"
  delegate_to: localhost

- name: 'Return registry location back to zuul for children jobs'
  zuul_return:
    data:
      docker_registry_port: "{{ registry_port }}"
      contrail_docker_registry: "{{ registry_name }}:{{ registry_port }}"
  delegate_to: localhost

